{"ast":null,"code":"var _jsxFileName = \"/Users/adamfuller/Documents/code/thegraph-hack/gtg/src/GraphNetwork.js\";\nimport React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Graph } from 'react-d3-graph';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Select from 'react-select';\nimport \"./GraphNetwork.css\";\n\nvar EventEmitter = require('eventemitter3');\n\nvar EE = new EventEmitter();\nconst GET_TRANSFERS = gql`\n  {\n    streams(first: 10) {\n      id\n      sender\n      recipient\n      deposit\n      token { id name decimals symbol}\n      startTime\n      ratePerSecond\n      exchangeRateInitial\n    },\n    tokens {\n      id\n      name\n      symbol\n    }\n  }\n`;\n\nfunction InfoTab() {\n  const [infoNode, updateInfoNode] = React.useState(null);\n\n  function emitted(context) {\n    console.log('once');\n    updateInfoNode(context); // true\n\n    console.log(infoNode);\n  }\n\n  EE.on('node-click', emitted);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, infoNode ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nodeInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"source\" in infoNode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Sender: \", infoNode.source), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"Recipient: \", infoNode.target), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Token: \", infoNode.token), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Deposit: \", infoNode.deposit / Math.pow(10, infoNode.decimals))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Address: \", infoNode.id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Sends: \", infoNode.sends), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Receives: \", infoNode.receives), \" \")) : null);\n}\n\nfunction CytoscapeNetwork() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSFERS);\n  const [myCyRef, updateMyCyRef] = React.useState({});\n  const [cytoscapeData, updateCytoscapeData] = React.useState({});\n  const [windowSize, updateWindowSize] = React.useState({\n    w: \"500px\",\n    h: \"500px\"\n  });\n  const [tokenOptions, setTokenOptions] = React.useState([]);\n  const cytoscapeLayout = {\n    name: 'cose',\n    fit: true,\n    // whether to fit to viewport\n    padding: 30,\n    // fit padding\n    boundingBox: undefined,\n    // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    animate: false,\n    // whether to transition the node positions\n    ready: undefined,\n    // callback on layoutready\n    stop: undefined,\n    // callback on layoutstop\n    transform: function (node, position) {\n      return position;\n    } // transform a given node position. Useful for changing flow direction in discrete layouts\n\n  };\n\n  function normaliseTransactions(node) {\n    const newNode = node;\n    newNode['data']['normalisedTransactions'] = Math.log(newNode['data']['transactions'] * 100);\n    return newNode;\n  }\n\n  function tokenSelectChange(values) {\n    EE.emit('filter-select', values);\n  }\n\n  function resetView() {\n    EE.emit('reset-view');\n  }\n\n  const colors = [\"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\", \"#0d5ac1\", \"#f205e6\", \"#1c0365\", \"#14a9ad\", \"#4ca2f9\", \"#a4e43f\", \"#d298e2\", \"#6119d0\", \"#d2737d\", \"#c0a43c\", \"#f2510e\", \"#651be6\", \"#79806e\", \"#61da5e\", \"#cd2f00\", \"#9348af\", \"#01ac53\", \"#c5a4fb\", \"#996635\", \"#b11573\", \"#4bb473\", \"#75d89e\", \"#2f3f94\", \"#2f7b99\", \"#da967d\", \"#34891f\", \"#b0d87b\", \"#ca4751\", \"#7e50a8\", \"#c4d647\", \"#e0eeb8\", \"#11dec1\", \"#289812\", \"#566ca0\", \"#ffdbe1\", \"#2f1179\", \"#935b6d\", \"#916988\", \"#513d98\", \"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\", \"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\", \"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\", \"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\", \"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\", \"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\", \"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\", \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\", \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\", \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\", \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\", \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\", \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\", \"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\", \"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\", \"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\", \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\", \"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\", \"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\", \"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\", \"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\", \"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\", \"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\", \"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\", \"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\", \"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\", \"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\", \"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\", \"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\", \"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\", \"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\", \"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\", \"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\", \"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"];\n\n  function createEdges(lineItem, tokenLookup) {\n    return {\n      data: {\n        source: lineItem.sender,\n        target: lineItem.recipient,\n        label: lineItem.id,\n        token: lineItem.token.name,\n        decimals: lineItem.token.decimals,\n        symbol: lineItem.token.symbol,\n        deposit: lineItem.deposit,\n        color: tokenLookup[lineItem.token.name]['color']\n      }\n    };\n  }\n\n  ;\n\n  function createNodes(streams) {\n    const nodes = {};\n\n    for (let stream of streams) {\n      if (stream.sender in nodes) {\n        nodes[stream.sender]['data']['sends']++;\n        nodes[stream.sender]['data']['transactions']++;\n        nodes[stream.sender]['data']['isSender'] = true;\n        nodes[stream.sender]['data'][stream.token.symbol] = true;\n      } else {\n        nodes[stream.sender] = {\n          data: {\n            id: stream.sender,\n            label: stream.sender,\n            sends: 1,\n            receives: 0,\n            transactions: 1,\n            isSender: true,\n            isRecipient: false,\n            [stream.token.symbol]: true\n          }\n        };\n      }\n\n      if (stream.recipient in nodes) {\n        nodes[stream.recipient]['data']['receives']++;\n        nodes[stream.recipient]['data']['transactions']++;\n        nodes[stream.recipient]['data']['isRecipient'] = true;\n        nodes[stream.recipient]['data'][stream.token.symbol] = true;\n      } else {\n        nodes[stream.recipient] = {\n          data: {\n            id: stream.recipient,\n            label: stream.recipient,\n            sends: 0,\n            receives: 1,\n            transactions: 1,\n            isSender: false,\n            isRecipient: true,\n            [stream.token.symbol]: true\n          }\n        };\n      }\n    }\n\n    const normalisedNodes = Object.values(nodes).map(normaliseTransactions);\n    return normalisedNodes; //Object.values(nodes)\n  }\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.streams) {\n      console.log({\n        streams: data.streams\n      });\n      console.log([loading, error, data]);\n      var tokenLookup = {};\n      var newTokenOptions = [{}];\n\n      for (var j = 0; j < data.tokens.length; j++) {\n        tokenLookup[data.tokens[j]['name']] = data.tokens[j];\n        tokenLookup[data.tokens[j]['name']]['color'] = colors[j];\n        tokenOptions.push({\n          label: data.tokens[j]['name'],\n          value: data.tokens[j]['symbol']\n        });\n      }\n\n      const newNodes = createNodes(data.streams);\n      updateCytoscapeData({\n        nodes: newNodes,\n        edges: data.streams.map(function (x) {\n          return createEdges(x, tokenLookup);\n        })\n      });\n\n      function setUpListeners() {\n        myCyRef.on('tap', function (event) {\n          if (event.target === myCyRef) {\n            console.log('tap on background');\n            EE.emit('node-click', null);\n          } else {\n            console.log('tap on some element');\n            EE.emit('node-click', event.target._private.data);\n            console.log(event.target._private.data);\n          }\n        });\n        var filteredEdges = {};\n        var tokenFiltered = false;\n        EE.on('filter-select', function (values) {\n          console.log(values);\n\n          if (!Array.isArray(values) || !values.length) {\n            console.log('tried');\n            filteredEdges.restore();\n            tokenFiltered = false;\n          } else {\n            if (tokenFiltered) {\n              filteredEdges.restore();\n            }\n\n            var edgeFilter = 'edge';\n            var nodeFilter = 'node';\n\n            for (let tkn of values) {\n              edgeFilter = edgeFilter + '[symbol != \"' + tkn.value + '\"]';\n              nodeFilter = nodeFilter + '[^' + tkn.value + ']';\n              console.log(nodeFilter);\n              console.log(edgeFilter);\n            }\n\n            filteredEdges = myCyRef.filter(edgeFilter + \", \" + nodeFilter);\n            console.log(filteredEdges);\n            myCyRef.remove(filteredEdges);\n            tokenFiltered = true;\n          }\n        });\n        EE.on('reset-view', function () {\n          if (tokenFiltered) {\n            filteredEdges.restore();\n          }\n\n          updateCytoscapeData({\n            nodes: newNodes,\n            edges: data.streams.map(function (x) {\n              return createEdges(x, tokenLookup);\n            })\n          }); //myCyRef.layout({name: 'random'}).run()\n        });\n      }\n\n      setUpListeners();\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CytoscapeNetwork\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 18\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Select, {\n    isMulti: true,\n    options: tokenOptions,\n    onChange: tokenSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"Refresh\")), /*#__PURE__*/React.createElement(CytoscapeComponent, {\n    className: \"foo bar\",\n    elements: CytoscapeComponent.normalizeElements(cytoscapeData),\n    style: {\n      width: windowSize.w,\n      height: windowSize.h,\n      left: 0,\n      right: 0\n    },\n    stylesheet: [{\n      selector: 'node',\n      style: {\n        width: 'data(normalisedTransactions)',\n        height: 'data(normalisedTransactions)' //label: 'data(id)'\n\n      }\n    }, {\n      selector: 'edge',\n      style: {\n        'width': 1,\n        'line-color': 'data(color)',\n        'target-arrow-color': '#ccc',\n        'target-arrow-shape': 'triangle'\n      }\n    }],\n    layout: cytoscapeLayout,\n    cy: cy => {\n      updateMyCyRef(cy);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction GraphNetwork() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CytoscapeNetwork, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(InfoTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default GraphNetwork;","map":{"version":3,"sources":["/Users/adamfuller/Documents/code/thegraph-hack/gtg/src/GraphNetwork.js"],"names":["React","gql","useQuery","Graph","CytoscapeComponent","Select","EventEmitter","require","EE","GET_TRANSFERS","InfoTab","infoNode","updateInfoNode","useState","emitted","context","console","log","on","source","target","token","deposit","Math","pow","decimals","id","sends","receives","CytoscapeNetwork","loading","error","data","myCyRef","updateMyCyRef","cytoscapeData","updateCytoscapeData","windowSize","updateWindowSize","w","h","tokenOptions","setTokenOptions","cytoscapeLayout","name","fit","padding","boundingBox","undefined","animate","ready","stop","transform","node","position","normaliseTransactions","newNode","tokenSelectChange","values","emit","resetView","colors","createEdges","lineItem","tokenLookup","sender","recipient","label","symbol","color","createNodes","streams","nodes","stream","transactions","isSender","isRecipient","normalisedNodes","Object","map","useEffect","newTokenOptions","j","tokens","length","push","value","newNodes","edges","x","setUpListeners","event","_private","filteredEdges","tokenFiltered","Array","isArray","restore","edgeFilter","nodeFilter","tkn","filter","remove","normalizeElements","width","height","left","right","selector","style","cy","GraphNetwork"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Graph } from 'react-d3-graph';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Select from 'react-select'\nimport \"./GraphNetwork.css\";\n\nvar EventEmitter = require('eventemitter3');\n\nvar EE = new EventEmitter()\n\nconst GET_TRANSFERS = gql`\n  {\n    streams(first: 10) {\n      id\n      sender\n      recipient\n      deposit\n      token { id name decimals symbol}\n      startTime\n      ratePerSecond\n      exchangeRateInitial\n    },\n    tokens {\n      id\n      name\n      symbol\n    }\n  }\n`;\n\nfunction InfoTab() {\n\n    const [infoNode, updateInfoNode] = React.useState(null);\n\n    function emitted(context) {\n        console.log('once')\n        updateInfoNode(context); // true\n        console.log(infoNode)\n      }\n\n    EE.on('node-click', emitted);\n\n  return (\n    <>\n    {infoNode ? <div className=\"nodeInfo\">\n    {\"source\" in infoNode ?\n    <>\n    <p>Sender: {infoNode.source}</p>\n    <p>Recipient: {infoNode.target}</p>\n    <p>Token: {infoNode.token}</p>\n    <p>Deposit: {infoNode.deposit / Math.pow(10, infoNode.decimals)}</p>\n    </>\n    : <>\n    <p>Address: {infoNode.id}</p>\n    <p>Sends: {infoNode.sends}</p>\n    <p>Receives: {infoNode.receives}</p> </>}\n    </div>\n    : null}\n    </>\n    )\n}\n\nfunction CytoscapeNetwork() {\n\n    const { loading, error, data } = useQuery(GET_TRANSFERS);\n\n    const [myCyRef, updateMyCyRef] = React.useState({\n    });\n\n    const [cytoscapeData, updateCytoscapeData] = React.useState({\n    });\n\n    const [windowSize, updateWindowSize] = React.useState({\n      w: \"500px\",\n      h: \"500px\"\n    })\n\n    const [tokenOptions, setTokenOptions] = React.useState([]);\n\n    const cytoscapeLayout = {\n    name: 'cose',\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    animate: false, // whether to transition the node positions\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: function (node, position ){ return position; } // transform a given node position. Useful for changing flow direction in discrete layouts\n  };\n\n    function normaliseTransactions(node) {\n      const newNode = node;\n      newNode['data']['normalisedTransactions'] = Math.log(newNode['data']['transactions']*100);\n      return newNode\n    }\n\n    function tokenSelectChange(values) {\n      EE.emit('filter-select', values)}\n\n    function resetView() {\n      EE.emit('reset-view')}\n\n    const colors = [\n    \"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\" ,\"#0d5ac1\" ,\n    \"#f205e6\" ,\"#1c0365\" ,\"#14a9ad\" ,\"#4ca2f9\" ,\"#a4e43f\" ,\"#d298e2\" ,\"#6119d0\",\n    \"#d2737d\" ,\"#c0a43c\" ,\"#f2510e\" ,\"#651be6\" ,\"#79806e\" ,\"#61da5e\" ,\"#cd2f00\" ,\n    \"#9348af\" ,\"#01ac53\" ,\"#c5a4fb\" ,\"#996635\",\"#b11573\" ,\"#4bb473\" ,\"#75d89e\" ,\n    \"#2f3f94\" ,\"#2f7b99\" ,\"#da967d\" ,\"#34891f\" ,\"#b0d87b\" ,\"#ca4751\" ,\"#7e50a8\" ,\n    \"#c4d647\" ,\"#e0eeb8\" ,\"#11dec1\" ,\"#289812\" ,\"#566ca0\" ,\"#ffdbe1\" ,\"#2f1179\" ,\n    \"#935b6d\" ,\"#916988\" ,\"#513d98\" ,\"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\n    \"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\n    \"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\n    \"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\n    \"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\n    \"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\n    \"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\n    \"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\n    \"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\n    \"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\",\n    \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\n    \"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\n    \"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\n    \"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\n    \"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\n    \"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\n    \"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\n    \"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\n    \"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\n    \"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\n    \"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\n    \"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\n    \"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\n    \"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\",\n    \"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\",\n    \"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\n    \"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\n    \"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"]\n\n    function createEdges(lineItem, tokenLookup) {\n      return {data: {source: lineItem.sender, target: lineItem.recipient, label: lineItem.id, token: lineItem.token.name, decimals:lineItem.token.decimals, symbol:lineItem.token.symbol, deposit: lineItem.deposit, color: tokenLookup[lineItem.token.name]['color']}}\n    };\n\n    function createNodes(streams) {\n      const nodes = {}\n      for (let stream of streams) {\n        if (stream.sender in nodes) {\n          nodes[stream.sender]['data']['sends']++\n          nodes[stream.sender]['data']['transactions']++\n          nodes[stream.sender]['data']['isSender'] = true\n          nodes[stream.sender]['data'][stream.token.symbol] = true\n        }\n        else {\n          nodes[stream.sender] = {data: {id: stream.sender, label: stream.sender, sends: 1, receives: 0, transactions: 1, isSender: true, isRecipient: false, [stream.token.symbol]: true}}\n        }\n        if (stream.recipient in nodes) {\n          nodes[stream.recipient]['data']['receives']++\n          nodes[stream.recipient]['data']['transactions']++\n          nodes[stream.recipient]['data']['isRecipient'] = true\n          nodes[stream.recipient]['data'][stream.token.symbol] = true\n        }\n        else {\n          nodes[stream.recipient] = {data: {id: stream.recipient, label: stream.recipient, sends: 0, receives: 1, transactions: 1, isSender: false, isRecipient: true, [stream.token.symbol]: true}}\n        }\n      }\n\n      const normalisedNodes = Object.values(nodes).map(normaliseTransactions)\n\n      return normalisedNodes //Object.values(nodes)\n    }\n\n    React.useEffect(() => {\n      if (!loading && !error && data && data.streams) {\n        console.log({ streams: data.streams });\n        console.log([loading, error, data])\n\n        var tokenLookup = {}\n        var newTokenOptions = [{}]\n        for (var j = 0; j < data.tokens.length; j++) {\n          tokenLookup[data.tokens[j]['name']] = data.tokens[j]\n          tokenLookup[data.tokens[j]['name']]['color'] = colors[j]\n          tokenOptions.push({label: data.tokens[j]['name'], value: data.tokens[j]['symbol']})\n        }\n\n        const newNodes = createNodes(data.streams)\n\n        updateCytoscapeData({nodes: newNodes, edges: data.streams.map(function (x) {return createEdges(x, tokenLookup)})})\n\n\n\n        function setUpListeners() {\n        myCyRef.on('tap', function(event) {\n          if( event.target === myCyRef ){\n            console.log('tap on background');\n            EE.emit('node-click', null)\n          } else {\n            console.log('tap on some element');\n            EE.emit('node-click', event.target._private.data)\n            console.log(event.target._private.data)\n          }\n        })\n\n        var filteredEdges = {}\n        var tokenFiltered = false\n\n\n\n        EE.on('filter-select',function(values) {\n          console.log(values)\n          if(!Array.isArray(values) || !values.length) {\n            console.log('tried')\n            filteredEdges.restore()\n            tokenFiltered = false\n          }\n          else {\n            if(tokenFiltered) {filteredEdges.restore()}\n\n          var edgeFilter  = 'edge'\n          var nodeFilter  = 'node'\n\n          for (let tkn of values) {\n            edgeFilter = edgeFilter + '[symbol != \"' + tkn.value + '\"]'\n            nodeFilter = nodeFilter + '[^' + tkn.value + ']'\n            console.log(nodeFilter)\n            console.log(edgeFilter)\n          }\n\n          filteredEdges = myCyRef.filter(edgeFilter + \", \" + nodeFilter);\n          console.log(filteredEdges)\n          myCyRef.remove(filteredEdges)\n          tokenFiltered = true\n        }\n      })\n\n      EE.on('reset-view',function() {\n        if(tokenFiltered) {filteredEdges.restore()}\n        updateCytoscapeData({nodes: newNodes, edges: data.streams.map(function (x) {return createEdges(x, tokenLookup)})})\n        //myCyRef.layout({name: 'random'}).run()\n      })\n      }\n        setUpListeners()\n    }\n    }, [loading, error, data]);\n\n    return (\n      <div className=\"CytoscapeNetwork\">\n      <div className=\"filters\">\n      {loading ? <p>Loading...</p> : <Select isMulti options={tokenOptions} onChange={tokenSelectChange}/>}\n      <button onClick={resetView}>Refresh</button>\n      </div>\n\n\n        <CytoscapeComponent\n        className=\"foo bar\"\n        elements={CytoscapeComponent.normalizeElements(cytoscapeData)}\n        style={{\n          width: windowSize.w, height: windowSize.h, left: 0, right: 0}}\n        stylesheet={[\n      {\n        selector: 'node',\n        style: {\n          width: 'data(normalisedTransactions)',\n          height: 'data(normalisedTransactions)',\n          //label: 'data(id)'\n        }\n      },\n      {\n      selector: 'edge',\n      style: {\n        'width': 1,\n        'line-color': 'data(color)',\n        'target-arrow-color': '#ccc',\n        'target-arrow-shape': 'triangle'\n      }\n    }\n    ]}\n        layout={cytoscapeLayout}\n        cy={(cy) => { updateMyCyRef(cy) }}\n        />\n      </div>\n    );\n}\n\nfunction GraphNetwork() {\n\n  return (\n    <div className=\"App\">\n    <CytoscapeNetwork/>\n    <InfoTab/>\n    </div>\n  );\n}\n\nexport default GraphNetwork;\n"]},"metadata":{},"sourceType":"module"}